# springboot关闭web端口
#spring.main.web-application-type=none
server.port=8046
spring.application.name=chat-service
dubbo.application.id=chat-service
dubbo.application.name=chat-service
# 禁用QOS同一台机器可能会有端口冲突现象
dubbo.application.qos-enable=false
dubbo.application.qos-accept-foreign-ip=false
# 配置注册中心
dubbo.registry.address=nacos://121.199.45.1:8848
spring.cloud.nacos.discovery.server-addr=121.199.45.1:8848
dubbo.protocol.name=dubbo
dubbo.protocol.port=20884
dubbo.protocol.id=dubbo



#logging.level.com.scau.userservice.mapper=debug


#redis配置
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=192.168.99.106
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-active=20
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=10
# 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=1000

#rabbitmq
spring.rabbitmq.host=192.168.99.106
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
# 每次从队列中取的消息个数，prefetch来限制Queue每次发送给每个消费者的消息数，设置为1表明，queue每次会发送1个消息给consumer，等到收到consumer的ack后，queue才会继续发消息给consumer
spring.rabbitmq.listener.simple.prefetch=1
#消息发送到交换机确认机制, 是否确认回调
#如果没有本条配置信息，当消费者收到生产者发送的消息后，生产者无法收到确认成功的回调信息
spring.rabbitmq.publisher-confirm-type=correlated
#消息确认机制 --- 是否开启手ack动确认模式   manual 开启
spring.rabbitmq.listener.simple.acknowledge-mode=manual
#设置为 true 后 消费者在消息没有被路由到合适队列情况下会被return监听，而不会自动删除
spring.rabbitmq.template.mandatory=true
#消费者最小数量
spring.rabbitmq.listener.simple.concurrency=1
#消费之最大数量
spring.rabbitmq.listener.simple.max-concurrency=1
#开启消费者重试机制(为false时关闭消费者重试(开启消息重新投递)，这时消费端代码异常会一直重复收到消息)
spring.rabbitmq.listener.simple.retry.enabled=true
#重试次数5(重新投递次数)
spring.rabbitmq.listener.simple.retry.max-attempts=3
#重试时间间隔
spring.rabbitmq.listener.simple.retry.initial-interval=1000
#重试次数超过上面的设置之后是否丢弃(消费者listener抛出异常，是否重回队列，默认true：重回队列， false为不重回队列(结合死信交换机)
spring.rabbitmq.listener.simple.default-requeue-rejected=false
